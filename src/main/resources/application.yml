spring:
  application:
    name: bidMarket
  kafka:
    bootstrap-servers: localhost:9092  # Địa chỉ của Kafka server
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: kafka_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
#        spring.json.trusted.packages: com.example.kafkaSpring.model # Thêm package model chứa User để kafka tin tưởng
        spring.json.trusted.packages: "*"  # Tin tưởng tất cả các packag
    listener:
      concurrency: 1 # Đảm bảo chỉ có 1 consumer xử lý 1 partition tại 1 thời điểm
    topic:
      bid_request: bid_request
    partitions:
      bid: 10

  mail:
    host: ${mailServer.host}
    port: ${mailServer.port}
    username: ${mailServer.email}
    password: ${mailServer.password}
    properties:
      mail:
        smtp:
          auth: ${mailServer.properties.mail.smtp.auth}
          starttls:
            enable: ${mailServer.properties.mail.smtp.starttls.enable}

  servlet:
    multipart:
      max-file-size: 10MB

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

server:
  port: 8080

app:
  jwt:
    secret: ${APP_JWT_SECRET}
    expiration: 3600000
    refresh-expiration: 8640000

log:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    com.example.bidMarket: DEBUG



aws:
  access:
    key:
      id: ${AWS_ACCESS_KEY_ID}
  secret:
    access:
      key: ${AWS_SECRET_ACCESS_KEY}
  s3:
    region: ${AWS_S3_REGION}
    bucket: ${AWS_S3_BUCKET}
  default_avatar_url: ${DEFAULT_AVATAR_URL}
  default_product_url: ${DEFAULT_PRODUCT_URL}

payment:
  vnPay:
    url: ${PAY_URL}
    tmnCode: ${TMN_CODE}
    secretKey: ${SECRET_KEY}
    returnUrl: ${RETURN_URL}
    vnpApiUrl: ${VNP_API_URL}
    version: ${VNP_VERSION}
    command: ${VNP_COMMAND}
    orderType: ${ORDER_TYPE}


  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

mailServer:
  host: smtp.gmail.com
  port: 587
  email: naitesbi@gmail.com
  password: wdqtvrdkrwytgkkc
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
  isSSL: false